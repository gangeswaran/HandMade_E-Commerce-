{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gange\\\\Desktop\\\\handmade\\\\frontend\\\\src\\\\components\\\\CheckoutForm.jsx\",\n  _s = $RefreshSig$();\n// CheckoutForm component for handling Stripe payment\nimport React, { useState } from \"react\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CheckoutForm = ({\n  totalAmount\n}) => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setLoading(true);\n    const response = await fetch(\"/create-payment-intent\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        amount: totalAmount * 100\n      })\n    });\n    const {\n      clientSecret\n    } = await response.json();\n    const {\n      error,\n      paymentIntent\n    } = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement)\n      }\n    });\n    if (error) {\n      console.error(\"Payment failed: \", error.message);\n      alert(`Payment failed: ${error.message}`);\n    } else {\n      console.log(\"Payment successful!\");\n      alert('Payment successful!');\n      // Handle successful payment (e.g., update order status)\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"card\",\n        children: \"Card Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: loading,\n      children: loading ? \"Processing...\" : \"Pay Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(CheckoutForm, \"EpOivMO/CSYE1Jz4Pma0ZWb9QPM=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = CheckoutForm;\nexport default CheckoutForm;\nvar _c;\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"names":["React","useState","CardElement","useStripe","useElements","jsxDEV","_jsxDEV","CheckoutForm","totalAmount","_s","loading","setLoading","stripe","elements","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","amount","clientSecret","json","error","paymentIntent","confirmCardPayment","payment_method","card","getElement","console","message","alert","log","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","disabled","_c","$RefreshReg$"],"sources":["C:/Users/gange/Desktop/handmade/frontend/src/components/CheckoutForm.jsx"],"sourcesContent":["// CheckoutForm component for handling Stripe payment\r\nimport React, { useState } from \"react\";\r\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\r\n\r\nconst CheckoutForm = ({ totalAmount }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setLoading(true);\r\n\r\n    const response = await fetch(\"/create-payment-intent\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ amount: totalAmount * 100 }),\r\n    });\r\n    const { clientSecret } = await response.json();\r\n\r\n    const { error, paymentIntent } = await stripe.confirmCardPayment(clientSecret, {\r\n      payment_method: {\r\n        card: elements.getElement(CardElement),\r\n      },\r\n    });\r\n\r\n    if (error) {\r\n      console.error(\"Payment failed: \", error.message);\r\n      alert(`Payment failed: ${error.message}`);\r\n    } else {\r\n      console.log(\"Payment successful!\");\r\n      alert('Payment successful!');\r\n      // Handle successful payment (e.g., update order status)\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <label htmlFor=\"card\">Card Details</label>\r\n        <CardElement />\r\n      </div>\r\n\r\n      <button type=\"submit\" disabled={loading}>\r\n        {loading ? \"Processing...\" : \"Pay Now\"}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CheckoutForm;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,SAAS,EAAEC,WAAW,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMW,MAAM,GAAGT,SAAS,CAAC,CAAC;EAC1B,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtBL,UAAU,CAAC,IAAI,CAAC;IAEhB,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwB,EAAE;MACrDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,MAAM,EAAEhB,WAAW,GAAG;MAAI,CAAC;IACpD,CAAC,CAAC;IACF,MAAM;MAAEiB;IAAa,CAAC,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IAE9C,MAAM;MAAEC,KAAK;MAAEC;IAAc,CAAC,GAAG,MAAMhB,MAAM,CAACiB,kBAAkB,CAACJ,YAAY,EAAE;MAC7EK,cAAc,EAAE;QACdC,IAAI,EAAElB,QAAQ,CAACmB,UAAU,CAAC9B,WAAW;MACvC;IACF,CAAC,CAAC;IAEF,IAAIyB,KAAK,EAAE;MACTM,OAAO,CAACN,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAACO,OAAO,CAAC;MAChDC,KAAK,CAAC,mBAAmBR,KAAK,CAACO,OAAO,EAAE,CAAC;IAC3C,CAAC,MAAM;MACLD,OAAO,CAACG,GAAG,CAAC,qBAAqB,CAAC;MAClCD,KAAK,CAAC,qBAAqB,CAAC;MAC5B;IACF;IAEAxB,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,oBACEL,OAAA;IAAM+B,QAAQ,EAAEvB,YAAa;IAAAwB,QAAA,gBAC3BhC,OAAA;MAAAgC,QAAA,gBACEhC,OAAA;QAAOiC,OAAO,EAAC,MAAM;QAAAD,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC1CrC,OAAA,CAACJ,WAAW;QAAAsC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eAENrC,OAAA;MAAQsC,IAAI,EAAC,QAAQ;MAACC,QAAQ,EAAEnC,OAAQ;MAAA4B,QAAA,EACrC5B,OAAO,GAAG,eAAe,GAAG;IAAS;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX,CAAC;AAAClC,EAAA,CA9CIF,YAAY;EAAA,QAEDJ,SAAS,EACPC,WAAW;AAAA;AAAA0C,EAAA,GAHxBvC,YAAY;AAgDlB,eAAeA,YAAY;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}